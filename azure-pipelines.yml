trigger:
  batch: true
  branches:
    include:
      - "*"

workspace:
  clean: all

variables:
  - name: SolutionBaseName
    value: "SFA.DAS.IdentifyDataLocks.Web"
  - name: BuildPlatform
    value: "any cpu"
  - name: BuildConfiguration
    value: "release"
  - group: "Prod Management Resources"

pool:
  name: "DAS - Continuous Integration"
  demands:
    - Agent.OS -equals Linux

resources:
  repositories:
    - repository: das-platform-building-blocks
      type: github
      name: SkillsFundingAgency/das-platform-building-blocks
      ref: refs/heads/master
      endpoint: "GitHub (SFA)"

steps:
  - task: UseGitVersion@5
    inputs:
      versionSpec: 5.x    

  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: 'src/**/*.csproj'
      feedsToUse: Config
      nugetConfigPath: src\Nuget.Config
      noCache: true

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: 'src/**/*.csproj'
      arguments: '--configuration $(buildConfiguration) --no-restore'

  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: '**/*Tests.csproj'
      arguments: '--configuration $(buildConfiguration) --no-build --logger trx --collect "Code coverage"'

  - template: azure-pipelines-templates/dependency-check.yml@das-platform-building-blocks

  - task: DotNetCoreCLI@2
    displayName: "Publish - dotnet publish $(SolutionBaseName)"
    inputs:
      command: publish
      publishWebProjects: false
      projects: "src/$(SolutionBaseName)/$(SolutionBaseName).csproj"
      arguments: "-o $(build.artifactstagingdirectory)/publish -c $(BuildConfiguration)"

  - task: CopyFiles@2
    displayName: "Copy Files to: $(build.artifactstagingdirectory)"
    inputs:
      Contents: |
        azure/**
      TargetFolder: "$(build.artifactstagingdirectory)/publish"
      OverWrite: true

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact"
    inputs:
      PathtoPublish: "$(build.artifactstagingdirectory)/publish"
